version: "3.9"

services:
  
  #webserver:
  #  image: dockerhub.timeweb.cloud/nginx:latest
  #  ports:
  #    - 80:80
  #    - 443:443
  #  restart: always
  #  volumes:
  #    - ./nginx/conf/:/etc/nginx/conf.d/:ro
  #    - ./certbot/www/:/var/www/certbot/:ro

  #certbot:
  #  image: dockerhub.timeweb.cloud/certbot/certbot:latest
  #  volumes:
  #    - ./certbot/www/:/var/www/certbot/:rw
  #    - ./certbot/conf/:/etc/letsencrypt/:rw

  frontend:
    container_name: frontend
    build:
      context: frontend
    volumes:
      - ./frontend:/app
    ports:
      - "5173:5173"
    tty: true

  backend:
    container_name: backend
    build:
      context: backend
    environment:
      NODE_TLS_REJECT_UNAUTHORIZED: 0
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: curl -H "apollo-require-preflight:true" -f http://backend:4000/graphql?query=%7B__typename%7D
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 20s
    ports:
      - "4000:4000"
    tty: true

  postgres:
    container_name: postgres
    image: dockerhub.timeweb.cloud/postgres:15.3-alpine
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: app
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d app"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
      - "54321:5432"

volumes:
  postgres:
